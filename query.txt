------SELECT------

1. Selezionare tutti gli studenti nati nel 1990 (160)
SELECT * 
FROM `students` 
WHERE `date_of_birth` LIKE '1990-%'; 

2. Selezionare tutti i corsi che valgono più di 10 crediti (479)
SELECT * 
FROM `courses` 
WHERE `cfu` > '10'; 

3. Selezionare tutti gli studenti che hanno più di 30 anni
SELECT * 
FROM `students` 
WHERE TIMESTAMPDIFF(YEAR, `date_of_birth`, CURDATE()) > 30; 

4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di
laurea (286)
SELECT * 
FROM `courses` 
WHERE `period` = 'I semestre' AND `year` = 1; 

5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del
20/06/2020 (21)
SELECT * 
FROM `exams` 
WHERE `date` = '2020-06-20' AND `hour` > '13:59:00'; 

6. Selezionare tutti i corsi di laurea magistrale (38)
SELECT * 
FROM `degrees` 
WHERE `name` LIKE '%Laurea Magistrale%'; 

7. Da quanti dipartimenti è composta l'università? (12)
SELECT `id` 
FROM `departments`; 

8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)
SELECT * 
FROM `teachers` 
WHERE `phone` IS NULL; 


------GROUP BY------

1. Contare quanti iscritti ci sono stati ogni anno
SELECT COUNT(`id`) AS `students_count`, YEAR(`enrolment_date`) AS `by_year` 
FROM `students` 
GROUP BY `by_year`; 

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio
SELECT COUNT(`id`) as `teachers_count`, `office_address` 
FROM `teachers` 
GROUP BY `office_address`; 

3. Calcolare la media dei voti di ogni appello d'esame
SELECT `exam_id`, AVG(`vote`) AS `avg_vote` 
FROM `exam_student` 
GROUP BY `exam_id`; 

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
SELECT COUNT(`id`) AS `cdl_num`, `department_id` 
FROM `degrees` 
GROUP BY `department_id`; 


------JOIN------

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
SELECT * 
FROM `students` 
INNER JOIN `degrees` 
ON `students`.`degree_id` = `degrees`.`id` 
WHERE `degrees`.`name` = 'Corso di Laurea in Economia'; 

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
SELECT * 
FROM `degrees` 
INNER JOIN `departments` 
ON `degrees`.`department_id` = `departments`.`id` 
WHERE `degrees`.`level` = 'magistrale' 
AND `departments`.`name` = 'Dipartimento di Neuroscienze'; 

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT `teachers`.`name`, `teachers`.`surname`, `courses`.`name` AS `course_name`, `courses`.`period`, `courses`.`year` 
FROM `teachers` 
INNER JOIN `course_teacher` 
ON `teachers`.`id` = `course_teacher`.`teacher_id` 
INNER JOIN `courses` 
ON `course_teacher`.`course_id` = `courses`.`id` 
WHERE `teachers`.`name` = 'Fulvio' 
AND `teachers`.`surname` = 'Amato'; 

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome
SELECT *
FROM `students`
INNER JOIN `degrees`
ON `students`.`degree_id` = `degrees`.`id`
INNER JOIN `departments`
ON `degrees`.`department_id` = `departments`.`id`
ORDER BY `students`.`name` ASC, `students`.`surname` ASC;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT `degrees`.`name` AS `CDL_name`, `courses`.`name` AS `course_name`, `courses`.`description`, `courses`.`period`, `courses`.`year`, `courses`.`cfu`, `teachers`.`name` AS `teacher_name`, `teachers`.`surname` AS `teacher_surname`
FROM `degrees`
INNER JOIN `courses`
ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `course_teacher`
ON `courses`.`id` = `course_teacher`.`course_id`
INNER JOIN `teachers`
ON `course_teacher`.`teacher_id` = `teachers`.`id`;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
SELECT DISTINCT  CONCAT(`teachers`.`name`, ' ', `teachers`.`surname`) AS `teachers_full_name`, `departments`.`name` AS `department_name`
FROM `teachers`
INNER JOIN `course_teacher`
ON `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses`
ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `degrees`
ON `courses`.`degree_id` = `degrees`.`id`
INNER JOIN `departments`
ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = 'Dipartimento di Matematica'
ORDER BY `teachers_full_name` ASC;

7. BONUS: Selezionare per ogni studente quanti tentativi d’esame ha sostenuto per
superare ciascuno dei suoi esami

SELECT CONCAT(`students`.`name`, ' ', `students`.`surname`) AS `student_full_name`, `courses`.`name` AS `exam_name`, COUNT(`courses`.`id`) AS `tries`
FROM `students`
INNER JOIN `exam_student`
ON `students`.`id` = `exam_student`.`student_id`
INNER JOIN `exams`
ON `exam_student`.`exam_id` = `exams`.`id`
INNER JOIN `courses`
ON `exams`.`course_id` = `courses`.`id`
GROUP BY `students`.`id`, `courses`.`id`
ORDER BY `tries` DESC;
